<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Posts on CM的博客</title>
    <link>http://localhost:1313/post/</link>
    <description>Recent content in Posts on CM的博客</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en</language>
    <lastBuildDate>Tue, 11 May 2021 10:46:14 +0800</lastBuildDate>
    
	<atom:link href="http://localhost:1313/post/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>成就墙</title>
      <link>http://localhost:1313/post/achievement_wall/</link>
      <pubDate>Tue, 11 May 2021 10:46:14 +0800</pubDate>
      
      <guid>http://localhost:1313/post/achievement_wall/</guid>
      <description>有个给小孩子上语文课的外部合作项目，里面有个成就墙的功能。类似于玩游戏，玩到什么程度可以获得成就。 成就分为3种课程类型，比如语文、朗读、音频</description>
    </item>
    
    <item>
      <title>如何快速实现后端业务</title>
      <link>http://localhost:1313/post/back-end-complete-bussiness-fast/</link>
      <pubDate>Fri, 26 Feb 2021 15:35:01 +0800</pubDate>
      
      <guid>http://localhost:1313/post/back-end-complete-bussiness-fast/</guid>
      <description>1、分析数据从哪来，怎么存储（大致判断数据规模），怎么展示。比如mysql、dla、MaxCompute 2、是否需要缓存。比如redis 3、</description>
    </item>
    
    <item>
      <title>解决前端获取下一页，列表数据重复</title>
      <link>http://localhost:1313/post/back-to-front-end-repeated-list-item/</link>
      <pubDate>Wed, 24 Feb 2021 16:32:42 +0800</pubDate>
      
      <guid>http://localhost:1313/post/back-to-front-end-repeated-list-item/</guid>
      <description>场景： 前端加载更多，列表数据会重复，但又不是必现。刷新后数据又正常了 经过测试，发现是加载更多时，有新纪录插入数据库，导致返回给前端一条上一页</description>
    </item>
    
    <item>
      <title>模拟聊天</title>
      <link>http://localhost:1313/post/simulate-chat/</link>
      <pubDate>Sun, 14 Jun 2020 19:27:15 +0800</pubDate>
      
      <guid>http://localhost:1313/post/simulate-chat/</guid>
      <description>需求：销售培训后，正式入职前话术测试。提取最近两个月正式环境销售与外部客户聊天记录中的客户聊天信息，之前已单独部署服务每隔一段时间从企业微信</description>
    </item>
    
    <item>
      <title>广告管理</title>
      <link>http://localhost:1313/post/advertising-plan/</link>
      <pubDate>Mon, 25 May 2020 10:48:51 +0800</pubDate>
      
      <guid>http://localhost:1313/post/advertising-plan/</guid>
      <description>后台系统有日期区间、状态（全部、待投放、投放中、已暂停）筛选 列表字段：投放位置、followId、状态、广告样式、曝光次数、点击次数、付费订</description>
    </item>
    
    <item>
      <title>积分、优惠券设计</title>
      <link>http://localhost:1313/post/points_coupon_design/</link>
      <pubDate>Sat, 01 Feb 2020 20:04:05 +0800</pubDate>
      
      <guid>http://localhost:1313/post/points_coupon_design/</guid>
      <description>积分会有一张积分活动表，活动名称、发放总数、每个用户可领取的数量，是否上架、活动截止时间。领取积分，会有一张用户积分表，谁，哪个积分活动，积</description>
    </item>
    
    <item>
      <title>golang echo日志打点、接口访问、数据统计</title>
      <link>http://localhost:1313/post/golang_echo_log/</link>
      <pubDate>Thu, 30 Jan 2020 14:06:21 +0800</pubDate>
      
      <guid>http://localhost:1313/post/golang_echo_log/</guid>
      <description>日志部分我们使用echo的logger配置和gommon的log，输出到业务项目文件夹log下的interface.log、logging.</description>
    </item>
    
    <item>
      <title>拼团</title>
      <link>http://localhost:1313/post/group_buying/</link>
      <pubDate>Thu, 30 Jan 2020 11:41:05 +0800</pubDate>
      
      <guid>http://localhost:1313/post/group_buying/</guid>
      <description>不管是正常支付还是拼团支付，都需要在pay表有记录，pay表type字段新增：课程拼团，type用来区分购买的商品类型，status字段新增</description>
    </item>
    
    <item>
      <title>2019年后端重构</title>
      <link>http://localhost:1313/post/2019-backend-refactoring/</link>
      <pubDate>Tue, 28 Jan 2020 17:12:43 +0800</pubDate>
      
      <guid>http://localhost:1313/post/2019-backend-refactoring/</guid>
      <description>首先要考虑的是接不接老项目。有时候会有选项，老项目还是新项目。 老项目会有一些商业价值，但可能是一个烂摊子，会背锅，主要精力放在架构上，以一个</description>
    </item>
    
    <item>
      <title>Android Weex js文件缓存实现</title>
      <link>http://localhost:1313/post/android-weex-js-cache/</link>
      <pubDate>Sat, 25 Jan 2020 17:33:04 +0800</pubDate>
      
      <guid>http://localhost:1313/post/android-weex-js-cache/</guid>
      <description>现在已经有新项目使用flutter，和Weex一样也满足只需要开发一次，多端使用。Weex前端需要适配的UI较麻烦，本身也不是特别成熟，有点</description>
    </item>
    
    <item>
      <title>基于graphql&#43;grpc结构的crud生成器</title>
      <link>http://localhost:1313/post/graphql-grpc-crud-kit/</link>
      <pubDate>Fri, 24 Jan 2020 20:17:17 +0800</pubDate>
      
      <guid>http://localhost:1313/post/graphql-grpc-crud-kit/</guid>
      <description>只需要输入要发布的服务名称，crud对应的数据库表名就可以生成代码。由于需要获取表信息，还需要数据库连接信息。 先编写代码，你希望生成的东西是</description>
    </item>
    
    <item>
      <title>年度报告</title>
      <link>http://localhost:1313/post/annual-report/</link>
      <pubDate>Fri, 24 Jan 2020 11:35:07 +0800</pubDate>
      
      <guid>http://localhost:1313/post/annual-report/</guid>
      <description>数据分为三类：整体数据、个体数据、统计数据 1、整体数据是所有用户都能看到的项目累计数据，比如累计用户数、视频播放时间、课程数、作业点评数、学</description>
    </item>
    
  </channel>
</rss>